*,
.context,
.ad.hoc {
  // The outermost dropdown container, holding together the label (if any),
  // and the select element with arrow. Note, that the dropdown option list,
  // when opened, exists completely outside the dropdown DOM hierarchy, and
  // is aligned into the correct position by JS.
  &.container {
    align-items: center;
    display: inline-flex;
    margin: 0.1em;
    position: relative;
  }

  // Styling of default label next to the dropdown (has no effect on custom
  // non-string label node, if provided).
  &.label {
    margin: 0 0.6em 0 1.2em;
  }

  // The main select input.
  &.select {
    border: 1px solid gray;
    border-radius: 0.3em;
    cursor: pointer;
    outline: none;
    overflow: hidden;
    padding: 0.3em 1.2em;

    &.active {
      border-radius: 0.3em 0.3em 0 0;

      .arrow {
        background-image: linear-gradient(to bottom, lightgray, white 50%, white);
      }
    }

    &:focus {
      border-color: blue;
      box-shadow: 0 0 3px 1px lightblue;
    }
  }

  &.arrow {
    background-image: linear-gradient(to top, lightgray, white 50%, white);
    border-left: 1px solid gray;
    display: inline-block;
    margin: -0.3em -1.2em -0.3em 1.2em;
    padding: 0.3em 0.6em;

    &::after {
      content: 'â–¼';
    }
  }

  &.option {
    cursor: default;
    outline: none;
    padding: 0 1.2em;

    &.active {
      background: deepskyblue;
      color: white;
    }
  }

  // The dropdown option list container.
  &.options {
    background: white;
    border: 1px solid gray;
    box-shadow: 0 0 6px 3px lightgray;
    position: absolute;
    z-index: 1000;
  }

  // An overlay covering entire viewport under the dropdown options list, when
  // the list is opened. It is used to close the dropdown without changing its
  // value, and may be used to shadow the page when the dropdown is opened.
  &.optionsOverlay {
    // background: red;
    height: 100%;
    left: 0;
    outline: none;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 999;
  }
}
